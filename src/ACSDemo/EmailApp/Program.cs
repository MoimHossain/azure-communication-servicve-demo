

// This code demonstrates how to fetch your connection string
// from an environment variable.
using Azure;
using Azure.Communication.Email;
using System;
using System.Collections.Generic;
using Azure.Communication;
using Azure.Communication.Sms;


var connectionString = Environment.GetEnvironmentVariable("AZ_COMMUNICATION_SERVICE_CONN_STRING");
var smsConnectionString = Environment.GetEnvironmentVariable("AZ_COMM_SMS_CONN_STR");

await SendSmsAsync(smsConnectionString);
//await SendEmailAsync(connectionString);

static async Task SendSmsAsync(string? connectionString)
{
    SmsClient smsClient = new SmsClient(connectionString);

    try
    {
        SmsSendResult sendResult = smsClient.Send(
            from: "MOIMHA",
            to: "+316XXXXX",
            message: "Hello World via SMS"
        );

        Console.WriteLine($"Sms id: {sendResult.MessageId}");
    }
    catch (RequestFailedException ex)
    {
        /// OperationID is contained in the exception message and can be used for troubleshooting purposes
        Console.WriteLine($"SMS send operation failed with error code: {ex.ErrorCode}, message: {ex.Message}");
    }
}

static async Task SendEmailAsync(string? connectionString)
{
    EmailClient emailClient = new EmailClient(connectionString);


    var subject = "Welcome to Azure Communication Service Email APIs.";
    var htmlContent = "<html><body><h1>Quick send email test</h1><br/><h4>This email message is sent from Azure Communication Service Email.</h4><p>This mail was sent using .NET SDK!!</p></body></html>";
    var sender = "DoNotReply@mail.octo-lamp.nl";
    var recipient = "XXX@XXX.com";


    try
    {
        Console.WriteLine("Sending email...");
        EmailSendOperation emailSendOperation = await emailClient.SendAsync(
            Azure.WaitUntil.Completed,
            sender,
            recipient,
            subject,
            htmlContent);
        EmailSendResult statusMonitor = emailSendOperation.Value;

        Console.WriteLine($"Email Sent. Status = {emailSendOperation.Value.Status}");

        /// Get the OperationId so that it can be used for tracking the message for troubleshooting
        string operationId = emailSendOperation.Id;
        Console.WriteLine($"Email operation id = {operationId}");
    }
    catch (RequestFailedException ex)
    {
        /// OperationID is contained in the exception message and can be used for troubleshooting purposes
        Console.WriteLine($"Email send operation failed with error code: {ex.ErrorCode}, message: {ex.Message}");
    }
}